{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf400
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 John Furlong\
CSCI 2270\
July 27 2018\
Project 6: Parts 1 & 2\
\

\b NOTE: 
\b0 Only compiled on native Linux environment\
\

\b Part 1: \
Files Used: 
\b0 \'93graph6.cpp\'94, \'93graph6.h\'94 and \'93main6.cpp\'94\
\

\b Build Instructions:
\b0  Program reads in cities from an adjacency matrix stored in a .txt file that is passed as a command line parameter to the main function. Loops a menu to print vertices and their adjacency lists as well as determine whether or not two cities are adjacent to each other. I did not modify my .h file.\
\
\

\b Part 2:\
Files Used: 
\b0 \'93graph6_2.cpp\'94, \'93graph6_2.h\'94 and \'93main6_2.cpp\'94\
\

\b Build Instructions: 
\b0 Program reads in cities from an adjacency matrix stored in a .txt file that is passed as a command line parameter to the main function. Program loops a menu containing options such as \'93print vertices\'94 or \'93assign districts\'94 which performs a DFS to assign IDs. \'93Shortest Path\'94 function uses BFS to return shortest unweighted path between vertices, while \'93shortestUnweightedPath\'94 returns the shortest path that is weighted. My .hpp file was not modified.\
\
}